apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ms2-db-pvc
  labels:
    app: postgres
    tier: database
spec:
  storageClassName: standard
  resources:
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteOnce
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ms2-db-deployment
  labels:
    app: ms2-db-deployment
    tier: database
spec:
  selector:
    matchLabels:
      app: ms2-db-deployment
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ms2-db-deployment
        tier: database
    spec:
      containers:
      - name: ms2-db-deployment
        image: postgres
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 5432
        resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
        env:
          - name:  POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name:  postgres-db
                key: DB_NAME_MS2
          - name:  POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name:  postgres-credential
                key:  DB_USER
          - name:  POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name:  postgres-credential
                key:  DB_PASSWORD
          - name: PGDATA
            value: "/var/lib/postgresql/data/pgdata/dbms2"
        volumeMounts:
          - mountPath:  "/var/lib/postgresql/data"
            name:  ms2-db-data
      volumes:
        - name:  ms2-db-data
          persistentVolumeClaim:
            claimName:  ms2-db-pvc
---
kind: Service
apiVersion: v1
metadata:
  name:  ms2-db-service
  labels:
    app: ms2-db-service
    tier: database
spec:
  selector:
    app:  ms2-db-deployment
    tier: database
  type:  ClusterIP
  ports:
  - port:  5433
    targetPort:  5432
    protocol: TCP

